#!/bin/bash
#
# preinst script
# This script executes before that package will be unpacked from its archive file.
#
# The following environment variables can be used to obtain information about the current installation:
#   PRODUCT_ID: id of the current product
#   CLIENT_DATA_DIR: directory where client data will be installed
#

# in case of opsi 4.2 (opsi-python present) use python variant of preinst (for efficiency)
if [ -e "/usr/bin/opsi-python" ]; then
	SCRIPT_DIR=$(dirname "$0")
	/usr/bin/opsi-python "$SCRIPT_DIR/preinst.py"
	exit $?
fi

TMP_DIR=${CLIENT_DATA_DIR}/../${PRODUCT_ID}.tmp

if [ -d $TMP_DIR ]; then
	echo "Temporary directory $TMP_DIR already exist, aborting!" 1>&2
	exit 1
fi
mkdir $TMP_DIR
[ -d $CLIENT_DATA_DIR ] || mkdir $CLIENT_DATA_DIR


if [ -d "${CLIENT_DATA_DIR}/files/opsi/custom" ]; then
	echo "Saving old custom dir"
	cp -r "${CLIENT_DATA_DIR}/files/opsi/custom" $TMP_DIR/ || exit 1
fi

if [ -d "${CLIENT_DATA_DIR}/files/custom" ]; then
	echo "Saving custom dir"
	cp -r "${CLIENT_DATA_DIR}/files/custom" $TMP_DIR/ || exit 1
fi

if [ -z $(opsi-admin -dS method config_getIdents null '{"id":"opsiclientd.event_on_shutdown.active"}') ]; then
	opsi-admin -d method config_createBool "opsiclientd.event_on_shutdown.active" "event on_shutdown active" "false"
fi
# Migration of legacy property "on_shutdown_install": on/off
if [ -e "${CLIENT_DATA_DIR}/files/opsi/on_shutdown" ]; then
	echo "Upgrading from opsi-client-agent < 4.2.0.0"
	for client_id in $(opsi-admin -dS method productPropertyState_getIdents null '{"productId":"opsi-client-agent","propertyId":"on_shutdown_install","values":"[\"on\"]"}' | cut -d";" -f3); do
		opsi-admin -d method configState_create "opsiclientd.event_on_shutdown.active" "${client_id}" "true"
	done
fi

exit 0
