encoding=utf8

deffunc prepare_uefi_boot_to($prefer_boot_option$ : string) : void
	;@author          detlef oertel
	;@date            20.05.2020
	;@Description     if this is an uefi OS, then prepare the uefi nextboot to
	;@Description     the stored uefi bootlabel that belongs to the boot target $prefer_boot_option$
	;@Returns         Returns string "void"
	;@OnError         nothing
	;@SpecialCase     
	;@References
	;@Links
	;@ParamDesc_$prefer_boot_option$    'network' or "local-stored-bootimage"  defaults to 'network' if empty
	;@ParamAdvice_$prefer_boot_option$
  
	;@Example     [actions]
	;@Example     prepare_uefi_boot_to('network')
	;@Example     ExitWindows /Reboot
	
	DefVar $OS$
	DefVar $lastLine$
	DefVar $bootGUID$
	DefVar $netbootLabel$
	DefVar $localbootimageLabel$
	DefVar $usedLabel$
	DefVar $jsonobj1$
	DefVar $jsonobj2$
	
	DefStringlist $resultlist$

	if runningOnUefi
		if not(($prefer_boot_option$ = "network") or ($prefer_boot_option$ = "local-stored-bootimage"))
			$prefer_boot_option$ = "network"
		endif
		
		Message "Get boot labels from server ...."
    	
		set $netbootLabel$ = ""
		set $resultlist$ = getReturnListFromSection("opsiservicecall_get_uefinetbootlabel")
		; we expect something with this structure:
		;[
		;    {
		;        "configId": "clientconfig.uefilocalopsibootlabel",
		;        "ident": "clientconfig.uefilocalopsibootlabel;pctry5detlef.uib.local",
		;        "values": [
		;            "opsibootimage"
		;        ],
		;        "objectId": "pctry5detlef.uib.local",
		;        "type": "ConfigState"
		;    }
		;]
		
		set $jsonobj1$ = Takestring(0,$resultlist$)
		if jsonIsArray($jsonobj1$)
			set $jsonobj2$ = jsonAsArrayGetElementByIndex($jsonobj1$, "0")
			if not($jsonobj2$ = "") and (jsonisObject($jsonobj2$))
				set $jsonobj1$ = jsonAsObjectGetValueByKey($jsonobj2$, "values")
				if not($jsonobj1$ = "") and (jsonisArray($jsonobj1$))
					set $netbootLabel$ = jsonAsArrayGetElementByIndex($jsonobj1$, "0")
				else
					LogWarning "Broken netboot label found"
				endif
			else
				comment "No netboot label found"
			endif
		else
			LogError "We got no valid json array from service: "+$jsonobj1$
		endif
		
		set $localbootimageLabel$ = ""
		set $resultlist$ = getReturnListFromSection("opsiservicecall_get_uefilocalbootimagelabel")
		set $jsonobj1$ = Takestring(0,$resultlist$)
		if jsonIsArray($jsonobj1$)
			set $jsonobj2$ = jsonAsArrayGetElementByIndex($jsonobj1$, "0")
			if not($jsonobj2$ = "") and (jsonisObject($jsonobj2$))
				set $jsonobj1$ = jsonAsObjectGetValueByKey($jsonobj2$, "values")
				if not($jsonobj1$ = "") and (jsonisArray($jsonobj1$))
					set $localbootimageLabel$ = jsonAsArrayGetElementByIndex($jsonobj1$, "0")
				else
					LogWarning "Broken localbootimagelabel label found"
				endif
			else
				comment "No localbootimagelabel label found"
			endif
		else
			LogError "We got no valid json array from service: "+$jsonobj1$
		endif
		
		if $prefer_boot_option$ = "network"
			set $usedLabel$ = $netbootLabel$
			if $usedLabel$ = ""
				set $usedLabel$ = $localbootimageLabel$
			endif
		else
			set $usedLabel$ = $localbootimageLabel$
			if $usedLabel$ = ""
				set $usedLabel$ = $netbootLabel$
			endif
		endif
		If $usedLabel$ = ""
			LogError "we got wether netboot nor a local stored bootimage label. - Aborting"
			isfatalerror
		endif
		
		Message "Set bios firmware ...."
		set $OS$ = GetOS
		if $OS$ = "Linux"
			set $resultlist$ = shellCall('efibootmgr -v')
			set $bootGUID$ = ""
			set $lastLine$ = takefirststringContaining($resultlist$, $usedLabel$)
			set $resultlist$ = splitstringOnWhitespace($lastLine$)
			set $lastLine$ = takestring(0,$resultlist$)
			set $bootGUID$ = strpart($lastLine$,"5","4")
			if not ($bootGUID$ = "")
				shellCall('efibootmgr --bootnext '+$bootGUID$)
			endif
		else
			set $bootGUID$ = getUefiBcdbootGuid($usedLabel$)
			if "0" = getlastexitcode
				if not ($bootGUID$ = "")
					if stringtobool(bootNextToUefiLabel($usedLabel$))
						comment "nextboot entry is set"
					else
						LogError "failed to set next boot to: "+$usedLabel$
						isFatalError
					endif
				else
					LogError "Error: Got empty GUID for label: "+$usedLabel$
				endif
			else
				LogError "Error while checking for GUID for label: "+$usedLabel$
			endif
		endif ; windows
	endif ; uefi
	
	;--------------------------------------------------
	
	[opsiservicecall_get_uefinetbootlabel]
	"method": "configState_getObjects"
	"params": [
						"[]",
						'{"configId":"clientconfig.uefinetbootlabel","objectId":"%opsiserviceUser%"}',
						]
	
	[opsiservicecall_get_uefilocalbootimagelabel]
	"method": "configState_getObjects"
	"params": [
						"[]",
						'{"configId":"clientconfig.uefilocalopsibootlabel","objectId":"%opsiserviceUser%"}',
						]


endfunc