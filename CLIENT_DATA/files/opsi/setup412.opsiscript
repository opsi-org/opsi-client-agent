; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib gmbh
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/credits/


encoding=utf8
;[Actions]
requiredWinstVersion >= "4.12.0.13"
ScriptErrorMessages = False

Message=opsi-client-agent installation
ShowBitmap "%scriptpath%\uninst\opsi.png" "opsi-client-agent"
comment "We are in setup412"

; Variables:
; Config Variables with prefixes
; GEN = general
; SHI = share information
; OCD = opsiclientd
; OLB = opsiLoginBlocker
; INST = used while installation
; Script variables with prefix INST

;******** installation vars **********
DefVar $INST_AktGina$
DefVar $INST_AllowReboot$
DefVar $INST_Authenticated$
DefVar $INST_BaseDir$
DefVar $INST_Cfgini$
DefVar $INST_custom_Cfgini$
DefVar $INST_ClientExists$
DefVar $INST_ClientId$
DefVar $INST_ComputerName$
DefVar $INST_Debug$
DefVar $INST_DepotServer$
DefVar $INST_DnsDomainName$
DefVar $INST_Error$
DefVar $INST_ExitCode$
DefVar $INST_IPAddress$
DefVar $INST_ImmediateRebootFlag$
DefVar $INST_MAC$
DefVar $INST_MinorOS$
DefVar $INST_NTVersion$
DefVar $INST_Modus$
DefVar $INST_NetBootProductname$
DefVar $INST_NicIndex$
DefVar $INST_NotifierDir$
DefVar $INST_OS$
DefVar $INST_OpensslConfigFile$
DefVar $INST_OpensslBaseDir$
DefVar $INST_OpsiClientdCertificateFile$
DefVar $INST_OpsiclientdDir$
DefVar $INST_OpsiclientdConf$
DefVar $INST_OpsiclientdRPCDir$
DefVar $INST_OpsiUtilitiesdDir$
DefVar $INST_ActionProcessorStarterDir$
DefVar $INST_Paramstr$
DefVar $INST_Pcname$
DefVar $INST_RebootFlag$
DefVar $INST_Result$
DefVar $INST_SetAclDir$
DefVar $INST_ServiceName$
DefVar $INST_Service_Password$
DefVar $INST_Service_User$
DefVar $INST_ShortServiceUrl$
DefVar $INST_SubModus$
DefVar $INST_Sysconfini$
DefVar $INST_SystemType$
DefVar $INST_WinstDir$
DefVar $INST_WinstRegKey$
DefVar $INST_gina_to_chain$
DefVar $INST_old_reg_gina_installed$
DefVar $INST_preloginvistaInstalled$
DefVar $INST_preloginloaderInstalled$
DefVar $INST_GinaDll$
DefVar $INST_service_hidden_password$
DefVar $INST_DefaultLoglevel$
DefVar $INST_PasswdLogLevel$
DefVar $INST_ConfigServerIP$
DefVar $INST_ConfigServerPort$
DefVar $INST_ProductType$
DefVar $INST_vcredistx86_installed$
;DefVar $INST_uac_level$
DefVar $ProductVersion$
DefVar $INST_tmpstr$
;moved to subconfig.opsiscript
;DefVar $INST_create_software_on_demand_menue_entry$
DefVar $INST_pcDescription$
DefVar $INST_pcNotes$
DefVar $INST_userIsAdmin$
DefVar $INST_product4setup$




DefVar $INST_SearchKey$
DefVar $INST_SearchValue$
DefVar $INST_SearchResult$

DefStringlist $INST_Adapterlist$
DefStringlist $INST_FullServicelist$
DefStringList $INST_ServiceResult$
DefStringList $INST_ResultList$
DefStringList $INST_ResultList2$
DefStringList $INST_ResultList3$
DefStringList $INST_ParamstrList$
DefStringList $INST_productList4setup$
DefStringList $INST_ErrorList$



;******** Sektion general **********

DefVar $GEN_bootmode$


;******** Sektion shareinfo **********

DefVar $SHI_pckey$

;******** Sektion opsiclientd **********

DefVar $OCD_global.log_level$
DefVar $OCD_config_service.url$
DefVar $OCD_config_service.connection_timeout$
DefVar $OCD_control_server.port$
DefVar $OCD_notification_server.port$
DefVar $OCD_open_firewall_for_control_server$
DefVar $OCD_OpsiVarDir$
DefVar $OCD_depot_server__username$
DefVar $OCD_depServices$
DefVar $OCD_notifier_dir$

DefStringlist $OCD_depServicelist$

;******** Sektion opsiLoginBlocker **********
;DefVar $OLB_ServiceConnectionTimeout$
DefVar $OLB_LogLevel$
DefVar $OLB_LoginBlockerStart$
DefVar $OLB_LoginBlockerTimeoutConnect$
;DefVar $OLB_LoginBlockerTimeoutInstall$
;opsiServiceType=0 (default), 1 (prelogin.exe/pcptch.exe), 2 (opsiclientd)
DefVar $OLB_opsiServiceType$


;******** Sektion preloginloader **********

DefVar $PLG_BaseDir$
DefVar $PLG_CfgDir$
DefVar $PLG_DebugOutput$
DefVar $PLG_PcptchExe$
DefVar $PLG_RebootOnBootmodeReins$
DefVar $PLG_RebootOnServicePackChange$
DefVar $PLG_RunWithUser$
DefVar $PLG_RunWithUserDelay$
DefVar $PLG_RunWithUserPassword$
DefVar $PLG_RunWithUserReboot$
DefVar $PLG_RunWithUserTask$
DefVar $PLG_RunWithUserTaskParms$
DefVar $PLG_RunWithUserUsername$
DefVar $PLG_UtilsDir$
DefVar $PLG_WinstRegKey$
DefVar $PLG_RunServiceAs$
DefVar $PLG_RunServiceAsDom$
DefVar $PLG_RunServiceAsUsr$
DefVar $PLG_RunServiceAsPas$

;******** Sektion shareinfo **********

DefVar $SHI_pckey_file$
DefVar $SHI_user$
DefVar $SHI_smbusername1$
DefVar $SHI_try_secondary_user$

;******** Sektion pcptch **********

DefVar $PCP_Bitmap1$
DefVar $PCP_Bitmap2$
DefVar $PCP_button_stopnetworking$
DefVar $PCP_copyDefaultUser$
DefVar $PCP_label1$
DefVar $PCP_label2$
DefVar $PCP_loadBitmap$
DefVar $PCP_makeLocalCopyOfIniFile$
DefVar $PCP_makeLocalWinst$
DefVar $PCP_mountdrive$
DefVar $PCP_opsiServiceURL$
DefVar $PCP_patchleveltyp$
DefVar $PCP_pcprotoname$
DefVar $PCP_opsiServerType$
DefVar $PCP_winstLocalDirectory$
DefVar $PCP_SecsUntilConnectionTimeOut$
DefVar $PCP_pingcheck$

;******** Sektion on_shutdown **********
;moved to subconfig.opsiscript
;DefVar $on_shutdown_GPOname$
;DefVar $on_shutdown_active$
;DefVar $on_shutdown_RegKeyA$
;DefVar $on_shutdown_RegKeyB$
;DefVar $on_shutdown_found$
;DefVar $on_shutdown_last_val$
;Defvar $on_shutdown_install$
;DefVar $on_shutdown_install_set_policy$
;DefVar $on_shutdown_RunScript$

;DefStringList $on_shutdown_configStates$
;DefStringList $on_shutdown_keylist$

;******** Sektion sub_restore_productOnClient **********

DefVar $LogDir$
DefVar $objectStr$
DefVar $oldPattern$
DefVar $fix_shutdown_starter$
DefVar $resultstr$
DefVar $ArrayStr$
DefVar $pid$
DefVar $oldclientId$
DefVar $identstr$
DefVar $do_not_change_setup_requests$
DefVar $lockdir$

DefStringlist $resultlist$
DefStringlist $resultlist1$
DefStringlist $productIdList$
DefStringlist $productIdInstalledList$
DefStringlist $productIdSetupList$
DefStringlist $productIdOnceList$
DefStringlist $pocList$

Set $LogDir$ = "%opsiLogDir%"

importlib "%scriptpath%\ocalib.opsiscript"


;******** sections end **********

; Patch #1237 (https://forum.opsi.org/viewtopic.php?f=7&t=6764#p29403)
DefVar               $OCD_WORKING_config_service.url$
DefStringList      $OCD_POSSIBLE_config_service.urls$
DefVar               $OCD_TEST_URL_IP$
DefVar               $OCD_PING_RESULT$
DefVar		     $OCD_DIST_DIR$

;*********************************************************
; static initial values for variables
;*********************************************************

Set $INST_Debug$ = "on"

if $INST_debug$ = "off"
	set $INST_DefaultLoglevel$ = "7"
	Set $INST_PasswdLogLevel$="7"
else
	set $INST_DefaultLoglevel$ = "8"
	comment " set $INST_PasswdLogLevel$ to 2 for production"
	Set $INST_PasswdLogLevel$="8"
endif

set $INST_ResultList$ = getProductMap

Set $INST_AktGina$ = ""
set $INST_service_hidden_password$ =""
Set $INST_AllowReboot$ = "true"
Set $INST_BaseDir$   = "%ProgramFiles32Dir%\opsi.org\opsi-client-agent"
Set $INST_OpsiclientdDir$   = $INST_BaseDir$+"\opsiclientd"
Set $INST_OpsiUtilitiesdDir$   = $INST_BaseDir$+"\utilities"
Set $INST_Cfgini$ = "%ScriptPath%\cfg\config.ini"
set $INST_custom_Cfgini$ = "%ScriptPath%\custom\config.ini"
Set $INST_DepotServer$ = ""
Set $INST_IPAddress$ = ""
Set $INST_ImmediateRebootFlag$ = ""
Set $INST_MAC$ = ""
Set $INST_NetBootProductname$ = ""
Set $INST_NicIndex$ = ""
Set $INST_NotifierDir$ = $INST_BaseDir$+"\notifier"
Set $INST_OpensslConfigFile$ = "%opsiTmpDir%\opsiclientd.cnf"
Set $INST_OpensslBaseDir$ = $INST_BaseDir$+"\openssl"
Set $INST_OpsiclientdCertificateFile$ = $INST_OpsiclientdDir$+"\opsiclientd.pem"
Set $INST_OpsiclientdConf$ = $INST_OpsiclientdDir$+"\opsiclientd.conf"
Set $INST_OpsiclientdRPCDir$ = $INST_BaseDir$+"\opsiclientd_rpc"
Set $INST_ActionProcessorStarterDir$ = $INST_BaseDir$+"\action_processor_starter"
Set $INST_Pcname$ = EnvVar ("COMPUTERNAME")
Set $INST_RebootFlag$ = ""
Set $INST_Service_Password$ = "pcpatch"
Set $INST_Service_User$ = "pcpatch"
;Set $INST_SetAclDir$ = $INST_OpsiUtilitiesdDir$ + "\SetACL 2.3.0\SetACL 2.3.0\Command line version\x86"
; The setacl.exe 2.3.0 hangs some times
Set $INST_SetAclDir$ = $INST_OpsiUtilitiesdDir$
;Set $INST_SetAclDir$ = $INST_OpsiUtilitiesdDir$ + "\SetACL 2.1.1\SetACL 2.1.1\Command line version\x86"
Set $INST_Sysconfini$ = "%ScriptPath%\cfg\sysconf.ini"
Set $INST_WinstDir$   = $INST_BaseDir$+"\opsi-winst"
Set $INST_WinstRegKey$ = "HKLM\SOFTWARE\opsi.org\winst"
set $INST_gina_to_chain$ = "msgina.dll"
Set $INST_preloginvistaInstalled$ = 'false'
set $INST_preloginloaderInstalled$ = 'false'
set $ProductVersion$ = "%installingProdVersion%"
if ($ProductVersion$="")
  ; service_setup.cmd
  set $ProductVersion$=GetValueFromInifile("c:\opsi.org\tmp\opsi\product.ini","opsi-client-agent","ProductVersion","")
  if ($ProductVersion$="")
    ; opsi-deploy
    set $ProductVersion$=GetValueFromInifile("c:\tmp\opsi-client-agent_inst\files\opsi\product.ini","opsi-client-agent","ProductVersion","")
    if ($ProductVersion$="")
	 LogWarning "empty productversion results in empty displayversion in [HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\opsi-client-agent]"
    endif
  endif
endif
set $OCD_OpsiVarDir$ = "c:\opsi.org"
;set $INST_uac_level$ = "0"
;moved to subconfig.opsiscript
;set $INST_create_software_on_demand_menue_entry$ = "true"
set $INST_pcDescription$ = ""
set $INST_pcNotes$ = ""

SetLogLevel=$INST_DefaultLoglevel$




;******** Sektion general **********

Set $GEN_bootmode$    = "BKSTD"


;******** Sektion opsiclientd **********

Set $OCD_config_service.url$         = ""
set $OCD_config_service.connection_timeout$ = "10"

Set $OLB_LoginBlockerStart$          = "1"
Set $OLB_LoginBlockerTimeoutConnect$ = "120"
;Set $OLB_LoginBlockerTimeoutInstall$ = "180"
Set $OLB_opsiServiceType$            = "2"
set $OCD_depot_server__username$ = "pcpatch"
set $OCD_DIST_DIR$ = "dist"
set $OCD_notifier_dir$ = "opsi-notifier"

;******** Sektion prelogin **********
Set $PLG_UtilsDir$ = $INST_BaseDir$+"\prelogin"

;******** Sektion preloginloader **********

Set $PLG_BaseDir$                    = $INST_BaseDir$
Set $PLG_UtilsDir$                   = $PLG_BaseDir$+"\prelogin"
Set $PLG_CfgDir$                     = $PLG_BaseDir$+"\cfg"
Set $PLG_DebugOutput$                = "0"
Set $PLG_PcptchExe$                  = $PLG_UtilsDir$+"\pcptch.exe"
Set $PLG_RebootOnBootmodeReins$      = "1"
Set $PLG_RebootOnServicePackChange$  = "1"
Set $PLG_RunWithUser$                = "0"
Set $PLG_RunWithUserDelay$           = "1000"
Set $PLG_RunWithUserPassword$        = ""
Set $PLG_RunWithUserReboot$          = "0"
Set $PLG_RunWithUserTask$            = ""
Set $PLG_RunWithUserTaskParms$       = ""
Set $PLG_RunWithUserUsername$        = "pcpatch"
Set $PLG_WinstRegKey$                = "SOFTWARE\opsi.org\winst"
Set $PLG_RunServiceAs$               = "1"
Set $PLG_RunServiceAsDom$            = ""
Set $PLG_RunServiceAsUsr$            = ""
Set $PLG_RunServiceAsPas$            = ""


;******** Sektion shareinfo **********

Set $SHI_pckey$       = ""
Set $SHI_pckey_file$  = $PLG_CfgDir$+"\locked.cfg"
Set $SHI_user$        = ""
Set $SHI_smbusername1$= ""
Set $SHI_try_secondary_user$="0"


;******** Sektion pcptch **********

Set $PCP_Bitmap1$                = ""
Set $PCP_Bitmap2$                = ""
Set $PCP_button_stopnetworking$  = ""
Set $PCP_copyDefaultUser$        = ""
Set $PCP_label1$                 = ""
Set $PCP_label2$                 = ""
Set $PCP_loadBitmap$             = ""
Set $PCP_makeLocalCopyOfIniFile$ = ""
Set $PCP_makeLocalWinst$         = ""
Set $PCP_mountdrive$             = ""
Set $PCP_opsiServiceURL$ 	  = ""
Set $PCP_patchleveltyp$          = ""
Set $PCP_pcprotoname$            = ""
Set $PCP_opsiServerType$ 		  = "service"
Set $PCP_winstLocalDirectory$    = $INST_WinstDir$
Set $PCP_SecsUntilConnectionTimeOut$ = "180"
Set $PCP_pingcheck$		= ""

;******** section on_shutdown **********
;Set $on_shutdown_RegKeyA$ = "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\State\Machine\Scripts\Shutdown"
;set $on_shutdown_GPOname$ = "opsi shutdown install policy"

;******** sections end **********

;*********************************************************
; Let's work
;*********************************************************

set $INST_OS$ = GetOS

if not($INST_OS$ = "Windows_NT")
	LogError "Wrong OS: Product: opsi-client-agent is only for Windows"
	isFatalError "Wrong OS"
endif

set $INST_MinorOS$ = GetNTVersion
set $INST_NTVersion$ = GetMsVersionInfo
Set $INST_SystemType$ = GetSystemType
set $INST_Resultlist$ = getMSVersionMap
set $INST_ProductType$ = getValue("product_type_nr",$INST_Resultlist$)
set $INST_vcredistx86_installed$ = "false"
if GetRegistryStringValue("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{1F1C2DFC-2D24-3E06-BCB8-725134ADF989}] DisplayVersion") = "9.0.30729.4148"
	comment "vcredistx86 Version 9.0.30729.4148 is installed"
	set $INST_vcredistx86_installed$ = "true"
endif
if GetRegistryStringValue("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{FF66E9F6-83E7-3A3E-AF14-8DE9A809A6A4}] DisplayVersion") = "9.0.21022"
	comment "vcredistx86 Version 9.0.21022 is installed"
	set $INST_vcredistx86_installed$ = "true"
endif
 
if CompareDotSeparatedNumbers($INST_NTVersion$,"4.0") <= "0"
	logError "Installation aborted: wrong OS version: only win2k and above alowed"
	isFatalError
endif
if CompareDotSeparatedNumbers($INST_NTVersion$,"6.1") < "0"
	set $OCD_DIST_DIR$ = "dist.nt5"
	logWarning "New opsiclientd will not run under nt5 and nt6.0, you will get the last stable version (4.0.83)"
endif

Switch $INST_NTVersion$
	Case "6.1"
		set $OCD_DIST_DIR$ = "dist.win7"
	Endcase
	Case "6.2"
		set $OCD_DIST_DIR$ = "dist.win8"
	Endcase
	Case "6.3"
		set $OCD_DIST_DIR$ = "dist.win81"
	Endcase
Endswitch

if CompareDotSeparatedNumbers($INST_NTVersion$,"10.0") >= "0"
	set $OCD_DIST_DIR$ = "dist.win10"
endif

if not (HasMinimumSpace ("%systemdrive%", "10 MB"))
	logError "Not enough space on drive %systemdrive% (we need 10 MB): Aborting"
	isFatalError
endif

if $INST_vcredistx86_installed$ = "false"
	comment "vc_redist not found - install it"
		comment "install via msi"
		ExecWith_autoit_vc_redist "%SCRIPTPATH%\autoit3.exe" WINST /letThemGo /EscapeStrings
		Winbatch_vc_redist_msi
		Sub_check_exitcode
		killtask "autoit3.exe"
endif

;*********************************************************
comment "set mode"
;*********************************************************

Set $INST_Paramstr$=PARAMSTR
set $INST_ParamstrList$ = splitstring($INST_Paramstr$, ":")

comment "Modus normally set by commandline argument"
if count($INST_ParamstrList$) > "0"
	Set $INST_MODUS$=takestring(0,$INST_ParamstrList$)
endif
if count($INST_ParamstrList$) > "1"
	Set $INST_SubModus$=takestring(1,$INST_ParamstrList$)
endif
if count($INST_ParamstrList$) > "2"
	Set $INST_tmpstr$ = takestring(2,$INST_ParamstrList$)
	if lower(trim($INST_tmpstr$)) = "noreboot"
		Set $INST_AllowReboot$ = "false"
	else
		if lower(trim($INST_tmpstr$)) = "reboot"
			Set $INST_AllowReboot$ = "true"
		endif
	endif
endif

comment "old Modes are remaped for backward compatibility"
if $INST_MODUS$ = "LOCAL"
	Set $INST_MODUS$="INSTALL"
endif
if $INST_MODUS$ = "LOCAL_REINSTALL"
	Set $INST_MODUS$="INSTALL"
endif
if $INST_MODUS$ = "SERVICE_INTERACTIVE"
	Set $INST_MODUS$="INSTALL"
	Set $INST_SubModus$="CREATE_CLIENT"
endif
if $INST_MODUS$ = "TFTP"
	Set $INST_MODUS$="INSTALL"
	Set $INST_SubModus$="BOOTIMAGE"
endif

comment "default submode of INSTALL is CONFIG_INI"
if $INST_MODUS$ = "INSTALL"
	if $INST_SubModus$ = ""
		Set $INST_SubModus$="CONFIG_INI"
	endif
endif

comment "map Mode REMOTEDEPLOY"
if $INST_MODUS$ = "REMOTEDEPLOY"
	Set $INST_MODUS$="INSTALL"
	Set $INST_SubModus$="CONFIG_INI"
	Set $INST_AllowReboot$ = "false"
endif

comment "if no commandline argument we default to update"
if $INST_MODUS$ = ""
	Set $INST_MODUS$="UPDATE"
endif

;if ($INST_MODUS$ = "UPDATE")
;	if GetProductProperty("forceConfigurationUpdate","off") = "on"
;		Set $INST_MODUS$="INSTALL"
;	endif
;endif

if $INST_SubModus$ = "BOOTIMAGE"
	comment "do not reboot in BOOTIMAGE mode because:"
	comment "    opsi-client-agent installation is part of the postinst.d mechanism"
	comment "    if the machine reboots no script will run after the opsi-client-agent script"
	Set $INST_AllowReboot$ = "false"
else
	Set $INST_AllowReboot$ = GetProductProperty("allow_reboot", $INST_AllowReboot$)
endif

comment "call function oca_shutdown_starter_fix()"
oca_shutdown_starter_fix()
comment "call function read_oca_configuration()"
oca_read_configuration()
comment "call function oca_copy_files()"
oca_copy_files()
comment "call function oca_write_configuration()"
oca_write_configuration()


comment "is there a custom sub file ..."
if fileexists("%ScriptPath%\custom\custom.opsiscript")
	comment "Start the custom sub file ..."
	sub "%ScriptPath%\custom\custom.opsiscript"
endif
sub "%scriptpath%\subconfig.opsiscript"
noUpdateScript

comment "call function oca_restore_productOnClient()"
oca_restore_productOnClient()
comment "call function oca_set_installation_status()"
oca_set_installation_status()
comment "call function oca_clean_up()"
oca_clean_up()

if count($INST_ErrorList$) > "0"
	Logerror "There where important errors while running:"
	setloglevel = 6
	for %err% in $INST_ErrorList$ do logError "%err%"
endif

comment "all is done but make a reboot after terminating with the script"
if ($INST_AllowReboot$ = "true")
	ExitWindows /Reboot
endif
		

;******************************End main action***************************************
;******************************Start sections called by main action***************************************
[ExecWith_autoit_vc_redist]
WinWait("Microsoft Visual C++", "Opsi Dialog")
Send("{TAB}")
Send("{TAB}")
Send("{ENTER}")
exit

[Winbatch_vc_redist_msi]
;msiexec /i "%ScriptPath%\deps\VC_RED.MSI" /qb-! /l*vx "c:\tmp\vcredist.log" ALLUSERS=2 DISABLEROLLBACK=1 VSEXTUI=1
msiexec /i "%ScriptPath%\deps\VC_RED.MSI" /qb-! /l* "%opsiLogDir%\vcredist_msi.log" ALLUSERS=1 REBOOT=ReallySuppress 

[Sub_check_exitcode]
comment "Test for installation success via exit code"
set $INST_ExitCode$ = getLastExitCode
; informations to exit codes see
; http://msdn.microsoft.com/en-us/library/aa372835(VS.85).aspx
; http://msdn.microsoft.com/en-us/library/aa368542.aspx
if ($INST_ExitCode$ = "0")
	comment "Looks good: setup program gives exitcode zero"
else
	comment "Setup program gives a exitcode unequal zero: " + $INST_ExitCode$
	if ($INST_ExitCode$ = "1603")
		comment "File is in use - seems not to be a problem (at vc_redist installation)"
	else
		if ($INST_ExitCode$ = "1605")
			comment "ERROR_UNKNOWN_PRODUCT	1605	This action is only valid for products that are currently installed."
			comment "Uninstall of a not installed product failed - no problem"
		else
			if ($INST_ExitCode$ = "1641")
				comment "looks good: setup program gives exitcode 1641"
				comment "ERROR_SUCCESS_REBOOT_INITIATED	1641	The installer has initiated a restart. This message is indicative of a success."
			else
				if ($INST_ExitCode$ = "3010")
					comment "looks good: setup program gives exitcode 3010"
					comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
				else
					logError "Fatal: Setup program gives an unknown exitcode unequal zero: " + $INST_ExitCode$
					;isFatalError
					set $INST_ErrorList$ = addtolist($INST_ErrorList$, " Error in Sub_check_exitcode: Fatal: Setup program gives an unknown exitcode unequal zero: " + $INST_ExitCode$)
				endif
			endif
		endif
	endif
endif

;******************************END sections called by main action***************************************
