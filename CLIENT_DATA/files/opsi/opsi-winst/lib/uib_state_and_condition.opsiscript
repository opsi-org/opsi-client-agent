encoding=utf8

;@author          detlef oertel
;@email           d.oertel@uib.de
;@date            27.08.2019
;@copyright       AGPLv3
;@version         1.0
;@filedesc        Collection of functions that gives info about system states that are relevant for product installations

; ###################################################################################################

deffunc isRebootPending() : string
	;@Description Checks if a Windows needs a reboot
	;@Returns Returns string "true" if reboot is required
	;@OnError Returns string "false"
	;@SpecialCase 
	;@References
	;@Links https://ilovepowershell.com/2015/09/10/how-to-check-if-a-server-needs-a-reboot/
	;@Links https://www.windowspro.de/script/ausstehende-reboots-nach-updates-pruefen-powershell-regexe
	;@author detlef oertel
	;@date 09.07.2019
	;@Example [actions]
	;@Example if stringToBool(isRebootPending())
	;@Example 	comment "we need a reboot"
	;@Example else
	;@Example 	comment "we do not need a reboot"
	;@Example endif

	set $result$ = "false"
	if RegKeyExists("HKLM\Software\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending")
		set $result$ = "true"
	endif
	if RegKeyExists("HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired")
		set $result$ = "true"
	endif
	if RegVarExists("HKLM\SYSTEM\CurrentControlSet\Control\Session Manager","PendingFileRenameOperations")
		set $result$ = "true"
	endif
endfunc

; ###################################################################################################

; https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed#net_d

deffunc get_dotnet4_version() : string
	;@Description Checks wich dotnet 4.x is installed
	;@Returns Returns string with the version number (aka "4.6") or empty string if no dotnet 4 is installed
	;@OnError Returns string ""
	;@SpecialCase 
	;@References
	;@Links 
	;@Links 
	;@author detlef oertel
	;@date 27.08.2019
	;@Example [actions]
	;@Example if ("" = get_dotnet4_version()) or CompareDotSeparatedNumbers(get_dotnet4_version(), "<","4.6")
	;@Example 	comment "No dotnet 4 >= 4.6 installed"
	;@Example else
	;@Example 	dotnet 4 >= 4.6 installed"
	;@Example endif
	
	set $result$ = ""
	set $result$ = GetRegistryStringValueSysNative("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full] Version")

endfunc

deffunc isdotnet_3_5_installed() : string
	;@Description Checks if a dotnet 3.5 is installed
	;@Returns Returns string "true" dotnet 3.5 is installed
	;@OnError Returns string "false"
	;@SpecialCase 
	;@References
	;@Links 
	;@Links 
	;@author detlef oertel
	;@date 27.08.2019
	;@Example [actions]
	;@Example if stringToBool(isdotnet_3_5_installed())
	;@Example 	comment "dotnet 3.5 is installed"
	;@Example else
	;@Example 	comment "No dotnet 3.5 found"
	;@Example endif

	DefStringlist $resultlist$

	set $result$ = "false"
	set $resultlist$ = getRegistryKeyListSysnative("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NET Framework Setup\NDP")
	if "" = takefirststringContaining($resultlist$,"v3.5")
		set $result$ = "false"
	else
		set $result$ = "true"
	endif
	
endfunc

