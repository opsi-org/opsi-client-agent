DefFunc get_config_value($ConfigName$ : string) : string
	DefVar $TempString$

	Comment "Get configState " + $ConfigName$
 	Set $TempList$ = TakeString(0, GetReturnListFromSection('OpsiServiceCall_get_configState'))
	if jsonAsArrayCountElements($TempString$) > "0"
		Set $TempString$ = JsonAsArrayGetElementByIndex($TempString$, "0")
		Set $TempString$ = JsonAsObjectGetValueByKey($TempString$, "values")
		Set $result$ = JsonAsArrayGetElementByIndex($TempString$, "0")
	else
		; ConfigState not found, use default from Config
		Set $TempList$ = TakeString(0, GetReturnListFromSection('OpsiServiceCall_get_config'))
		Set $TempString$ = JsonAsArrayGetElementByIndex($TempString$, "0")
		Set $TempString$ = JsonAsObjectGetValueByKey($TempString$, "defaultValues")
		Set $result$ = JsonAsArrayGetElementByIndex($TempString$, "0")
	endif

	[OpsiServiceCall_get_config]
	"method": "config_getObjects"
	"params": [
		'[]',
		'{"configId":"$ConfigName$"}',
	]

	[OpsiServiceCall_get_configState]
	"method": "configState_getObjects"
	"params": [
		'[]',
		'{"configId":"$ConfigName$","objectId":"$ClientId$"}',
	]
EndFunc

DefFunc oca_restore_productOnClient() : void
	DefVar $TempString$
	DefStringList $TempList$
	DefVar $DoNotChangeSetupRequests$
	DefStringList $ProductOnClients$
	DefStringList $ProductIdsInstalled$
	DefStringList $ProductIdsSetup$
	DefStringList $ProductIdsOnce$
	DefStringList $ProductIds$
	DefStringList $ErrorList$

	Set $ProductIdsInstalled$ = EmptyList($ProductIdsInstalled$)

	Set $SwitchInstalledProductsToSetup$ = Lower(get_config_value("clientconfig.capture.switch_installed_products_to_setup"))
	Comment "Mode: switch_installed_products_to_setup = " + $SwitchInstalledProductsToSetup$

	; If $DoNotChangeSetupRequests$ == true: Keep current actionRequests (once/setup) on service
	Set $DoNotChangeSetupRequests$ = "true"

	if $SwitchInstalledProductsToSetup$ = "true"
		Set $DoNotChangeSetupRequests$ = Lower(get_config_value("clientconfig.capture.do_not_change_setup_requests"))
		Comment "Fetch installed localboot packages from opsi service"
		Set $ProductOnClients$ = EmptyList($ProductOnClients$)
		Set $TempList$ = GetReturnListFromSection("OpsiServiceCall_get_productOnClient_installed_localboot")
		Set $TempString$ = TakeString(0, $TempList$)
		if JsonAsArrayCountElements($TempString$) > "0"
			Set $ProductOnClients$ = JsonAsArrayToStringList($TempString$)
			for %CurPoc% in $ProductOnClients$ do Set $ProductIdsInstalled$ = AddToList($ProductIdsInstalled$, JsonAsObjectGetValueByKey('%CurPoc%', "productId"))
		endif
	else
		Comment "Delete ProductOnClients with actionRequest none"
		Set $ProductIds$ = EmptyList($ProductIds$)
		Set $ProductOnClients$ = EmptyList($ProductOnClients$)
		Set $TempList$ = GetReturnListFromSection("OpsiServiceCall_get_productOnClient_none_localboot")
		Set $TempString$ = TakeString(0, $TempList$)
		if JsonAsArrayCountElements($TempString$) > "0"
			Set $ProductOnClients$ = JsonAsArrayToStringList($TempString$)
		endif
		for %CurPoc% in $ProductOnClients$ do Set $ProductIds$ = AddToList($ProductIds$, JsonAsObjectGetValueByKey('%CurPoc%', "productId"))
		for %CurProductId% in $ProductIds$ do OpsiServiceCall_del_productOnClient
	endif
	Comment "Mode: do_not_change_setup_requests = " + $DoNotChangeSetupRequests$

	Comment "Fetch localboot packages with actionRequest setup from opsi service"
	Set $ProductIdsSetup$ = EmptyList($ProductIdsSetup$)
	Set $ProductOnClients$ = EmptyList($ProductOnClients$)
	Set $TempList$ = GetReturnListFromSection("OpsiServiceCall_get_productOnClient_setup_localboot")
	Set $TempString$ = TakeString(0, $TempList$)
	if jsonAsArrayCountElements($TempString$) > "0"
		Set $ProductOnClients$ = JsonAsArrayToStringList($TempString$)
		for %CurPoc% in $ProductOnClients$ do Set $ProductIdsSetup$ = AddToList($ProductIdsSetup$, JsonAsObjectGetValueByKey('%CurPoc%', "productId"))
	endif

	Comment "Fetch localboot packages with actionRequest once from opsi service"
	Set $ProductIdsOnce$ = EmptyList($ProductIdsOnce$)
	Set $ProductOnClients$ = EmptyList($ProductOnClients$)
	Set $TempList$ = GetReturnListFromSection("OpsiServiceCall_get_productOnClient_once_localboot")
	Set $TempString$ = TakeString(0, $TempList$)
	if JsonAsArrayCountElements($TempString$) > "0"
		Set $ProductOnClients$ = jsonAsArrayToStringList($TempString$)
		for %CurPoc% in $ProductOnClients$ do Set $ProductIdsOnce$ = AddToList($ProductIdsOnce$, JsonAsObjectGetValueByKey('%CurPoc%', "productId"))
	endif

	Message "Restore productOnClients from file"
	Comment "Restore productOnClients from file"
	Set $ProductIds$ = EmptyList($ProductIds$)
	Set $TempString$ = StrLoadTextFile("%opsiTmpDir%\productOnClients.json")
	if not (JsonIsValid($TempString$))
		LogError "Invalid json file: %opsiTmpDir%\productOnClients.json"
		IsFatalError "Invalid json file: %opsiTmpDir%\productOnClients.json"
	endif
	Set $ProductOnClients$ = JsonAsArrayToStringList($TempString$)
	for %CurPoc% in $ProductOnClients$ do Set $ProductIds$ = AddToList($ProductIds$, JsonAsObjectGetValueByKey('%CurPoc%', "productId"))
	for %PocIdx% = "0" to Calculate(Count($ProductOnClients$)+"-1") do sub_set_clientId_in_ProductOnClients
	Comment "Convert modified list to json array"
	Set $TempString$ = JsonStringListToJsonArray($ProductOnClients$)

	if not (errorsOccuredSinceMark = 0)
		LogError "Error while handling productOnClients from captured image"
		IsFatalError "Error while handling productOnClients from captured image"
	endif

	Comment "Updating " + jsonAsArrayCountElements($TempString$) + " ProductOnClients from file"
	OpsiServiceCall_update_productOnClient

	if Count($ProductIdsInstalled$) > "0"
		for %CurProductId% in $ProductIds$ do Set $ProductIdsInstalled$ = RemoveFromListByMatch('%CurProductId%', $ProductIdsInstalled$)
		if Count($ProductIdsInstalled$) > "0"
			Comment "Set installed productIds to setup"
			for %CurProductId% in $ProductIdsInstalled$ do OpsiServiceCall_set_setup
		endif
	endif

	if $DoNotChangeSetupRequests$ = "true"
		Comment "Restore saved setup actions"
		if count($ProductIdsSetup$) > "0"
			for %CurProductId% in $ProductIdsSetup$ do OpsiServiceCall_set_setup
		endif
		Comment "Restore saved once actions"
		if count($ProductIdsOnce$) > "0"
			for %CurProductId% in $ProductIdsOnce$ do OpsiServiceCall_set_once
		endif
	endif

	Comment "Delete unwanted ProductOnClients"
	Set $ProductIds$ = createStringList('opsi-local-image-wim-capture', 'opsi-local-image-sysprep', 'opsi-wim-capture')
	for %CurProductId% in $ProductIds$ do OpsiServiceCall_del_productOnClient


	[sub_set_clientId_in_ProductOnClients]
	Comment "Get object from array"
	Set $TempString$ = TakeString("%PocIdx%", $ProductOnClients$)
	Comment "Remove ident"
	Set $TempString$ = JsonAsObjectDeleteByKey($TempString$, "ident")
	Comment "Set clientId"
	Set $TempString$ = JsonAsObjectSetStringtypeValueByKey($TempString$, "clientId", $ClientId$)
	Comment "Write modified object back to array"
	Set $ProductOnClients$ = SetStringInListAtIndex($TempString$, $ProductOnClients$, "%PocIdx%")


	[OpsiServiceCall_get_productOnClient_installed_localboot]
	"method": "productOnClient_getObjects"
	"params": [
		"[]",
		'{"clientId":"$ClientId$","productType":"LocalbootProduct","installationStatus":"installed"}',
	]

	[OpsiServiceCall_get_productOnClient_setup_localboot]
	"method": "productOnClient_getObjects"
	"params": [
		"[]",
		'{"clientId":"$ClientId$","productType":"LocalbootProduct","actionRequest":"setup"}',
	]

	[OpsiServiceCall_get_productOnClient_once_localboot]
	"method": "productOnClient_getObjects"
	"params": [
		"[]",
		'{"clientId":"$ClientId$","productType":"LocalbootProduct","actionRequest":"once"}',
	]

	[OpsiServiceCall_get_productOnClient_none_localboot]
	"method": "productOnClient_getObjects"
	"params": [
		"[]",
		'{"clientId":"$ClientId$","productType":"LocalbootProduct","actionRequest":"none"}',
	]

	[OpsiServiceCall_update_productOnClient]
	"method": "productOnClient_updateObjects"
	"params": [
		'$TempString$'
	]

	[OpsiServiceCall_set_setup]
	"method": "setProductActionRequestWithDependencies"
	"params": [
		'%CurProductId%',
		'$ClientId$',
		'setup',
	]

	[OpsiServiceCall_set_once]
	"method": "setProductActionRequestWithDependencies"
	"params": [
		'%CurProductId%',
		'$ClientId$',
		'once',
	]

	[OpsiServiceCall_del_productOnClient]
	"method": "productOnClient_delete"
	"params": [
		'%CurProductId%',
		'$ClientId$',
	]

EndFunc
