image: docker.uib.gmbh/opsi/dev/pybuilder:uib-python-3.10

stages:
  - prepare
  - build
  - package
  - test


prepare_files:
  stage: prepare
  script:
    - opsi-dev-cli -l info binary pull
    - version=$(grep OPSI/control -A 10 -e "\[Product\]" | grep "version:" | tr -d "^a-zA-Z :")
    - package=$(grep OPSI/control -A 5 -e "\[Package\]" | grep "version:" | tr -d "^a-zA-Z :")
    - newpackage="$package"
    - '[ "$CI_COMMIT_TAG" = "" ] && newpackage="$package.$CI_JOB_ID"'
    - 'sed -i "s/version: $package/version: $newpackage/" OPSI/control'
    - echo "$version-$newpackage" > CLIENT_DATA/files/opsi-client-agent.version
  artifacts:
    name: prepared_files
    paths:
      - OPSI/control
      - CLIENT_DATA/


windows-x86-installer:
  stage: build
  tags:
    - win10
  script:
    # Speedup Invoke-WebRequest
    - $ProgressPreference = 'SilentlyContinue'
    - Invoke-WebRequest -UseBasicParsing -Uri "$OPSIDEVTOOLS_URL_WINDOWS_X86" -OutFile opsi-dev-tools.zip
    - Expand-Archive opsi-dev-tools.zip -DestinationPath .
    - .\opsi-dev-tool.exe --self-install -l info
    - Invoke-WebRequest -UseBasicParsing -Uri "http://binaryindex.uib.gmbh/mirror/resource_hacker/windows/x86/resource_hacker_windows_x86_5.1.8.zip" -OutFile resource_hacker.zip
    - Expand-Archive resource_hacker.zip -DestinationPath .
    # Get version from control file
    - "$versionLine = Get-Content -Path OPSI\\control | Where-Object { $_ -match 'version: 4.' }"
    - $version = $versionLine.Split(':')[1].trim()
    # Download ziplaunch for windows
    - .\opsi-dev-cli.exe binary pull ziplaunch
    # Build installer
    - ((Get-Content -path .\oca-installer\ziplaunch.ini -Raw) -replace "{version}",$version) | Set-Content -Path .\oca-installer\ziplaunch.ini
    - Start-Process ".\ziplaunch\ziplaunch.exe" -ArgumentList "CLIENT_DATA",".\oca-installer\ziplaunch.ini","opsi-client-agent-installer.exe" -Wait
    # Sign exe
    - .\opsi-dev-tool.exe -l info --signserver-sign opsi-client-agent-installer.exe
    # Push to binaryindex
    - if (! $CI_COMMIT_TAG) {.\opsi-dev-cli.exe -l info binary push opsi-client-agent-installer.exe --product=opsi-client-agent-installer --system=windows --architecture=x86 --version=$version --prerelease="$CI_JOB_ID"}
    - if ($CI_COMMIT_TAG) {.\opsi-dev-cli.exe -l info binary push opsi-client-agent-installer.exe --product=opsi-client-agent-installer --system=windows --architecture=x86 --version=$version }
  artifacts:
    name: opsi-client-agent-installer
    paths:
      - opsi-client-agent-installer.exe


linux_make_msi:
  # wixl sometimes produces a corrupt cab file in msi
  when: manual
  image: debian:bullseye
  stage: package
  script:
    - apt update
    - apt -y install wget cpio unar wixl uuid-runtime
    - version=$(grep OPSI/control -A 10 -e "\[Product\]" | grep "version:" | tr -d "^a-zA-Z :")
    #- product_id=$(uuidgen | tr a-z A-Z)
    #- sed "s/{version}/${version}/g;s/{product_id}/${product_id}/g" msi/opsi-client-agent.wxs > opsi-client-agent.wxs
    - sed "s/{version}/${version}/g" msi/opsi-client-agent.wxs > opsi-client-agent.wxs
    - cat opsi-client-agent.wxs
    - wixl -v opsi-client-agent.wxs
    - opsi-dev-tool -l info --signserver-sign opsi-client-agent.msi
    # Push to binaryindex
    - '[ "$CI_COMMIT_TAG" = "" ] && opsi-dev-cli -l info binary push opsi-client-agent.msi --product=opsi-client-agent-msi --system=windows --architecture=x86 --version="$version" --prerelease"$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-cli -l info binary push opsi-client-agent.msi --product=opsi-client-agent-msi --system=windows --architecture=x86 --version="$version"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-cli -l info release-service register-package-version opsi-client-agent-msi MISC --files=opsi-client-agent.msi --version="$version" --changelog-file=OPSI/changelog'
  artifacts:
    name: opsi-client-agent-msi
    paths:
      - opsi-client-agent.msi


windows_make_msi:
  stage: package
  tags:
    - win10
  script:
    - Invoke-WebRequest -UseBasicParsing -Uri "$OPSIDEVTOOLS_URL_WINDOWS_X86" -OutFile opsi-dev-tools.zip
    - Expand-Archive opsi-dev-tools.zip -DestinationPath .
    - .\opsi-dev-tool.exe --self-install -l info
    - Invoke-WebRequest -UseBasicParsing -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile wix-binaries.zip
    - Expand-Archive wix-binaries.zip -DestinationPath wix
    # Get version from control file
    - "$versionLine = Get-Content -Path OPSI\\control | Where-Object { $_ -match 'version: 4.' }"
    - $version = $versionLine.Split(':')[1].trim()
    # Patch version
    - ((Get-Content -path msi\\opsi-client-agent.wxs -Raw) -replace "{version}",$version) | Set-Content -Path opsi-client-agent.wxs
    - Get-Content opsi-client-agent.wxs
    # Build msi
    - wix\\candle.exe opsi-client-agent.wxs
    - wix\\light.exe opsi-client-agent.wixobj
    # Sign msi
    - .\opsi-dev-tool.exe -l info --signserver-sign opsi-client-agent.msi
    # Push to binaryindex
    - if (! $CI_COMMIT_TAG) {.\opsi-dev-cli.exe -l info binary push opsi-client-agent.msi --product=opsi-client-agent-msi --system=windows --architecture=x86 --version=$version --prerelease="$CI_JOB_ID"}
    - if ($CI_COMMIT_TAG) {.\opsi-dev-cli.exe -l info binary push opsi-client-agent.msi --product=opsi-client-agent-msi --system=windows --architecture=x86 --version=$version }
    - if ($CI_COMMIT_TAG) {.\opsi-dev-cli.exe -l info release-service register-package-version opsi-client-agent-msi MISC --files=opsi-client-agent.msi --version=$version --changelog-file=OPSI\\changelog.txt}

make_opsi_package:
  stage: package
  script:
    - mv opsi-client-agent-installer.exe CLIENT_DATA/
    - opsi-makepackage --no-set-rights -l 6
    - upload-package opsi-client-agent_*.opsi


test_windows_versions:
  stage: test
  when: manual
  script:
    - OLDVERSION="4.1.1.0-1"
    - version=$(grep OPSI/control -A 10 -e "\[Product\]" | grep "version:" | tr -d "^a-zA-Z :")
    - package=$(grep OPSI/control -A 5 -e "\[Package\]" | grep "version:" | tr -d "^a-zA-Z :")
    - version="$version-$(echo $package | tr '.' '~')"
    - opsi-dev-cli -l info jenkins test --systems=win10-21h1,win10-x64-21h1,win7,win7-x64,win81,win81-x64,win2012,win2022 --versions="$OLDVERSION,$version,$version"

test_tagged:
  stage: test
  only:
    - tags
  script:
    - OLDVERSION="4.1.1.0-1"
    - version=$(grep OPSI/control -A 10 -e "\[Product\]" | grep "version:" | tr -d "^a-zA-Z :")
    - package=$(grep OPSI/control -A 5 -e "\[Package\]" | grep "version:" | tr -d "^a-zA-Z :")
    - version="$version-$(echo $package | tr '.' '~')"
    - opsi-dev-cli -l info jenkins test --versions="$OLDVERSION,$version,$version"
